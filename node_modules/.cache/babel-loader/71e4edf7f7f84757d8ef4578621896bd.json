{"ast":null,"code":"import moment from \"moment\";\nexport const createArrayOfDates = startDate => {\n  var dateArray = [];\n\n  if (startDate === null) {\n    return dateArray;\n  }\n\n  var currentDate = moment(startDate);\n\n  for (let i = 0; i < 5; i++) {\n    dateArray.push(moment(currentDate).format(\"MMMM Do YYYY\"));\n    currentDate = moment(currentDate).add(1, \"days\");\n  }\n\n  return dateArray;\n};\nexport const createWeatherArrays = weather => {\n  let weatherArrays = [[]];\n  let day = 0;\n  let firstDay = +weather[0][\"dt_txt\"].slice(8, 10);\n\n  for (let i = 0; i < weather.length; i++) {\n    let currentDay = +weather[i][\"dt_txt\"].slice(8, 10);\n\n    if (currentDay === firstDay) {\n      weatherArrays[day].push(weather[i]);\n    } else {\n      day += 1;\n      weatherArrays.push([]);\n      weatherArrays[day].push(weather[i]);\n      firstDay = currentDay;\n    }\n  }\n\n  return weatherArrays;\n};","map":{"version":3,"sources":["/Users/sonutoor/codingsmaan/React-WeatherApp/src/utils.js"],"names":["moment","createArrayOfDates","startDate","dateArray","currentDate","i","push","format","add","createWeatherArrays","weather","weatherArrays","day","firstDay","slice","length","currentDay"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,OAAO,MAAMC,kBAAkB,GAAIC,SAAD,IAAe;AAC7C,MAAIC,SAAS,GAAG,EAAhB;;AACA,MAAID,SAAS,KAAK,IAAlB,EAAwB;AACtB,WAAOC,SAAP;AACD;;AACD,MAAIC,WAAW,GAAGJ,MAAM,CAACE,SAAD,CAAxB;;AACA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxBF,IAAAA,SAAS,CAACG,IAAV,CAAeN,MAAM,CAACI,WAAD,CAAN,CAAoBG,MAApB,CAA2B,cAA3B,CAAf;AACAH,IAAAA,WAAW,GAAGJ,MAAM,CAACI,WAAD,CAAN,CAAoBI,GAApB,CAAwB,CAAxB,EAA2B,MAA3B,CAAd;AACH;;AACD,SAAOL,SAAP;AACD,CAXI;AAaL,OAAO,MAAMM,mBAAmB,GAAIC,OAAD,IAAa;AAC9C,MAAIC,aAAa,GAAG,CAAC,EAAD,CAApB;AACA,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,QAAQ,GAAG,CAAEH,OAAO,CAAC,CAAD,CAAP,CAAW,QAAX,EAAqBI,KAArB,CAA2B,CAA3B,EAA6B,EAA7B,CAAjB;;AAEA,OAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGK,OAAO,CAACK,MAA5B,EAAoCV,CAAC,EAArC,EAAyC;AACvC,QAAIW,UAAU,GAAG,CAAEN,OAAO,CAACL,CAAD,CAAP,CAAW,QAAX,EAAqBS,KAArB,CAA2B,CAA3B,EAA6B,EAA7B,CAAnB;;AACA,QAAIE,UAAU,KAAKH,QAAnB,EAA6B;AAC3BF,MAAAA,aAAa,CAACC,GAAD,CAAb,CAAmBN,IAAnB,CAAwBI,OAAO,CAACL,CAAD,CAA/B;AACD,KAFD,MAGK;AACHO,MAAAA,GAAG,IAAI,CAAP;AACAD,MAAAA,aAAa,CAACL,IAAd,CAAmB,EAAnB;AACAK,MAAAA,aAAa,CAACC,GAAD,CAAb,CAAmBN,IAAnB,CAAwBI,OAAO,CAACL,CAAD,CAA/B;AACAQ,MAAAA,QAAQ,GAAGG,UAAX;AACD;AACF;;AACD,SAAOL,aAAP;AACD,CAlBM","sourcesContent":["import moment from \"moment\";\n\nexport const createArrayOfDates = (startDate) => {\n    var dateArray = [];\n    if (startDate === null) {\n      return dateArray;\n    }\n    var currentDate = moment(startDate);\n    for (let i = 0; i < 5; i++) {\n        dateArray.push(moment(currentDate).format(\"MMMM Do YYYY\"));\n        currentDate = moment(currentDate).add(1, \"days\");\n    }\n    return dateArray;\n  };\n\n  export const createWeatherArrays = (weather) => {\n    let weatherArrays = [[]]\n    let day = 0;\n    let firstDay = +(weather[0][\"dt_txt\"].slice(8,10))\n  \n    for (let i = 0; i < weather.length; i++) {\n      let currentDay = +(weather[i][\"dt_txt\"].slice(8,10))\n      if (currentDay === firstDay) {\n        weatherArrays[day].push(weather[i])\n      }\n      else {\n        day += 1\n        weatherArrays.push([])\n        weatherArrays[day].push(weather[i])\n        firstDay = currentDay\n      }\n    }\n    return weatherArrays\n  }"]},"metadata":{},"sourceType":"module"}